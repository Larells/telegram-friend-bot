import os
import logging
import telebot
from telebot import types
import openai

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
bot = telebot.TeleBot(TELEGRAM_TOKEN)
openai.api_key = OPENAI_API_KEY

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=["start"])
def start_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üí¨ –ü–æ–±–æ–ª—Ç–∞—Ç—å", "üß† –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", "üé≤ –ê–Ω–µ–∫–¥–æ—Ç")
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ò–ò-–¥—Ä—É–≥ üòä", reply_markup=markup)

# –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
@bot.message_handler(func=lambda message: True)
def handle_all(message):
    if message.text == "üé≤ –ê–Ω–µ–∫–¥–æ—Ç":
        bot.send_message(message.chat.id, "–ü–æ—á–µ–º—É —É—Ç–∫–∞ —Å–º–µ—ë—Ç—Å—è? –ü–æ—Ç–æ–º—É —á—Ç–æ —É –Ω–µ—ë –∫—Ä—è-–∫—Ä—è-–∫—Ä–∏–∑–∏—Å! üòÇ")
    elif message.text == "üí¨ –ü–æ–±–æ–ª—Ç–∞—Ç—å" or message.text == "üß† –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å, –∏ —è –æ—Ç–≤–µ—á—É!")
    else:
        try:
            response = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=[{"role": "user", "content": message.text}]
            )
            reply = response.choices[0].message.content.strip()
            bot.send_message(message.chat.id, reply)
        except Exception as e:
            bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

bot.polling()
